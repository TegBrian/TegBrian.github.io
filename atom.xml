<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://tegbrian.github.io/</id>
    <title>欢迎来到TegBrian的小窝！       ヾ(^▽^*)))</title>
    <updated>2020-03-11T07:17:55.973Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://tegbrian.github.io/"/>
    <link rel="self" href="https://tegbrian.github.io/atom.xml"/>
    <subtitle>TEG的一个小小博客，ヾ(≧∇≦*)ゝ</subtitle>
    <logo>https://tegbrian.github.io/images/avatar.png</logo>
    <icon>https://tegbrian.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 欢迎来到TegBrian的小窝！       ヾ(^▽^*)))</rights>
    <entry>
        <title type="html"><![CDATA[归并排序]]></title>
        <id>https://tegbrian.github.io/post/gui-bing-pai-xu/</id>
        <link href="https://tegbrian.github.io/post/gui-bing-pai-xu/">
        </link>
        <updated>2020-03-10T15:16:00.000Z</updated>
        <content type="html"><![CDATA[<p>kkk</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[快速排序]]></title>
        <id>https://tegbrian.github.io/post/kuai-su-pai-xu/</id>
        <link href="https://tegbrian.github.io/post/kuai-su-pai-xu/">
        </link>
        <updated>2020-03-10T15:15:21.000Z</updated>
        <content type="html"><![CDATA[<p>kkk</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[电脑快捷键]]></title>
        <id>https://tegbrian.github.io/post/dian-nao-kuai-jie-jian/</id>
        <link href="https://tegbrian.github.io/post/dian-nao-kuai-jie-jian/">
        </link>
        <updated>2020-03-06T01:47:39.000Z</updated>
        <content type="html"><![CDATA[<p>Ctrl+1,2,3...　功能：切换到从左边数起第1,2,3...个标签</p>
<p>Ctrl+A　功能：全部选中当前页面内容</p>
<p>Ctrl+C　功能：复制当前选中内容</p>
<p>Ctrl+D　功能：打开“添加收藏”面版(把当前页面添加到收藏夹中)</p>
<p>Ctrl+E　功能：打开或关闭“搜索”侧边栏(各种搜索引擎可选)</p>
<p>Ctrl+F　功能：打开“查找”面版</p>
<p>Ctrl+G　功能：打开或关闭“简易收集”面板</p>
<p>Ctrl+H　功能：打开“历史”侧边栏</p>
<p>Ctrl+I　功能：打开“收藏夹”侧边栏/另:将所有垂直平铺或水平平铺或层叠的窗口恢复</p>
<p>Ctrl+K　功能：关闭除当前和锁定标签外的所有标签</p>
<p>Ctrl+L　功能：打开“打开”面版(可以在当前页面打开Iternet地址或其他文件...)</p>
<p>Ctrl+N　功能：新建一个空白窗口(可更改,Maxthon选项→标签→新建)</p>
<p>Ctrl+O　功能：打开“打开”面版(可以在当前页面打开Iternet地址或其他文件...)</p>
<p>Ctrl+P　功能：打开“打印”面板(可以打印网页,图片什么的...)</p>
<p>Ctrl+Q　功能：打开“添加到过滤列表”面板(将当前页面地址发送到过滤列表)</p>
<p>Ctrl+R　功能：刷新当前页面</p>
<p>Ctrl+S　功能：打开“保存网页”面板(可以将当前页面所有内容保存下来)</p>
<p>Ctrl+T　功能：垂直平铺所有窗口</p>
<p>Ctrl+V　功能：粘贴当前剪贴板内的内容</p>
<p>Ctrl+W　功能：关闭当前标签(窗口)</p>
<p>Ctrl+X　功能：剪切当前选中内容(一般只用于文本操作)</p>
<p>Ctrl+Y　功能：重做刚才动作(一般只用于文本操作)</p>
<p>Ctrl+Z　功能：撤消刚才动作(一般只用于文本操作)</p>
<p>Ctrl+F4　功能：关闭当前标签(窗口)</p>
<p>Ctrl+F5　功能：刷新当前页面</p>
<p>Ctrl+F6　功能：按页面打开的先后时间顺序向前切换标签(窗口)</p>
<p>Ctrl+F11　功能：隐藏或显示菜单栏</p>
<p>Ctrl+Tab　功能：以小菜单方式向下切换标签(窗口)</p>
<p>Ctrl+拖曳　功能：保存该链接的地址或已选中的文本或指定的图片到一个文件夹中(保存目录可更改,Maxthon选项→保存)</p>
<p>Ctrl+小键盘'+'　功能：当前页面放大20%</p>
<p>Ctrl+小键盘'-'　功能：当前页面缩小20%</p>
<p>Ctrl+小键盘'*'　功能：恢复当前页面的缩放为原始大小</p>
<p>Ctrl+Alt+S　功能：自动保存当前页面所有内容到指定文件夹(保存路径可更改,Maxthon选项→保存)</p>
<p>Ctrl+Shift+小键盘'+'　功能：所有页面放大20%</p>
<p>Ctrl+Shift+小键盘'-'　功能：所有页面缩小20%</p>
<p>Ctrl+Shift+F　功能：输入焦点移到搜索栏</p>
<p>Ctrl+Shift+G　功能：关闭“简易收集”面板</p>
<p>Ctrl+Shift+H　功能：打开并激活到你设置的主页</p>
<p>Ctrl+Shift+N　功能：在新窗口中打开剪贴板中的地址,如果剪贴板中为文字,则调用搜索引擎搜索该文字(搜索引擎可选择,Maxthon选项→搜索)</p>
<p>Ctrl+Shift+S　功能：打开“保存网页”面板(可以将当前页面所有内容保存下来,等同于Ctrl+S)</p>
<p>Ctrl+Shift+W　功能：关闭除锁定标签外的全部标签(窗口)</p>
<p>Ctrl+Shift+F6　功能：按页面打开的先后时间顺序向后切换标签(窗口)</p>
<p>Ctrl+Shift+Tab　功能：以小菜单方式向上切换标签(窗口)</p>
<p>Alt+1　功能：保存当前表单</p>
<p>Alt+2　功能：保存为通用表单</p>
<p>Alt+A　功能：展开收藏夹列表<br>
资源管理器</p>
<p>END显示当前窗口的底端</p>
<p>HOME显示当前窗口的顶端</p>
<p>NUMLOCK+数字键盘的减号(-)折叠所选的文件夹</p>
<p>NUMLOCK+数字键盘的加号(+)显示所选文件夹的内容</p>
<p>NUMLOCK+数字键盘的星号(*)显示所选文件夹的所有子文件夹</p>
<p>向左键当前所选项处于展开状态时折叠该项，或选定其父文件夹</p>
<p>向右键当前所选项处于折叠状态时展开该项，或选定第一个子文件夹</p>
<p>自然键盘</p>
<p>【窗口】显示或隐藏“开始”菜单</p>
<p>【窗口】+F1帮助</p>
<p>【窗口】+D显示桌面</p>
<p>【窗口】+R打开“运行”</p>
<p>【窗口】+E打开“我的电脑”</p>
<p>【窗口】+F搜索文件或文件夹</p>
<p>【窗口】+U打开“工具管理器”</p>
<p>【窗口】+BREAK显示“系统属性”</p>
<p>【窗口】+TAB在打开的项目之间切换<br>
辅助功能</p>
<p>按右边的SHIFT键八秒钟切换筛选键的开和关</p>
<p>按SHIFT五次切换粘滞键的开和关</p>
<p>按NUMLOCK五秒钟切换切换键的开和关</p>
<p>左边的ALT+左边的SHIFT+NUMLOCK切换鼠标键的开和关</p>
<p>左边的ALT+左边的SHIFT+PRINTSCREEN切换高对比度的开和关</p>
<p>下面是补充的运行命令:</p>
<p>按“开始”-“运行”,或按WIN键+R，在『运行』窗口中输入：</p>
<p>(按英文字符顺序排列)</p>
<p>%temp%---------打开临时文件夹</p>
<p>.--------------C:DocumentsandSettings用户名所在文件夹</p>
<p>..-------------C:DocumentsandSettings</p>
<p>...------------我的电脑</p>
<p>--------------C盘</p>
<p>appwize.cpl----添加、删除程序</p>
<p>access.cpl-----辅助功能选项</p>
<p>Accwiz---------辅助功能向导</p>
<p>cmd------------CMD命令提示符</p>
<p>command--------CMD命令提示符</p>
<p>chkdsk.exe-----Chkdsk磁盘检查</p>
<p>certmgr.msc----证书管理实用程序</p>
<p>calc-----------启动计算器</p>
<p>charmap--------启动字符映射表</p>
<p>cintsetp-------仓颉拼音输入法</p>
<p>cliconfg-------SQLSERVER客户端网络实用程序</p>
<p>clipbrd--------剪贴板查看器</p>
<p>control--------打开控制面板</p>
<p>conf-----------启动netmeeting</p>
<p>compmgmt.msc---计算机管理</p>
<p>cleanmgr-------垃圾整理</p>
<p>ciadv.msc------索引服务程序</p>
<p>dcomcnfg-------打开系统组件服务</p>
<p>ddeshare-------打开DDE共享设置</p>
<p>dxdiag---------检查DirectX信息</p>
<p>drwtsn32-------系统医生</p>
<p>devmgmt.msc----设备管理器</p>
<p>desk.cpl-------显示属性</p>
<p>dfrg.msc-------磁盘碎片整理程序</p>
<p>diskmgmt.msc---磁盘管理实用程序</p>
<p>dvdplay--------DVD播放器</p>
<p>eventvwr-------事件查看器</p>
<p>eudcedit-------造字程序</p>
<p>explorer-------打开资源管理器</p>
<p>fsmgmt.msc-----共享文件夹管理器</p>
<p>firewall.cpl---WINDOWS防火墙</p>
<p>gpedit.msc-----组策略</p>
<p>hdwwiz.cpl-----添加硬件</p>
<p>iexpress-------木马捆绑工具，系统自带</p>
<p>inetcpl.cpl----INTETNET选项</p>
<p>intl.cpl-------区域和语言选项(输入法选项)</p>
<p>irprops.cpl----无线链接</p>
<p>joy.cpl--------游戏控制器</p>
<p>lusrmgr.msc----本机用户和组</p>
<p>logoff---------注销命令</p>
<p>main.cpl-------鼠标</p>
<p>mem.exe--------显示内存使用情况</p>
<p>migwiz---------文件转移向导</p>
<p>mlcfg32.cpl----邮件</p>
<p>mplayer2-------简易widnowsmediaplayer</p>
<p>mspaint--------画图板</p>
<p>msconfig.exe---系统配置实用程序</p>
<p>mstsc----------远程桌面连接</p>
<p>magnify--------放大镜实用程序</p>
<p>mmc------------打开控制台</p>
<p>mmsys.cpl------声音和音频设备</p>
<p>mobsync--------同步命令</p>
<p>ncpa.cpl-------网络连接</p>
<p>nslookup-------IP地址侦测器</p>
<p>netstartX----开始X服务</p>
<p>netstopX-----停止X服务</p>
<p>netstat-an----命令检查接口</p>
<p>netsetup.cpl---无线网络安装向导</p>
<p>notepad--------打开记事本</p>
<p>nslookup-------IP地址侦探器</p>
<p>narrator-------屏幕“讲述人”</p>
<p>ntbackup-------系统备份和还原</p>
<p>ntmsmgr.msc----移动存储管理器</p>
<p>ntmsoprq.msc---移动存储管理员操作请求</p>
<p>nusrmgr.cpl----用户账户</p>
<p>nwc.cpl--------NetWare客户服务</p>
<p>osk------------打开屏幕键盘</p>
<p>odbcad32-------ODBC数据源管理器</p>
<p>odbccp32.cpl---ODBC数据源管理器</p>
<p>oobe/msoobe/a-检查XP是否激活</p>
<p>packager-------对象包装程序</p>
<p>perfmon.msc----计算机性能监测程序</p>
<p>powercfg.cpl---电源选项</p>
<p>progman--------程序管理器</p>
<p>regedit--------注册表</p>
<p>rsop.msc-------组策略结果集</p>
<p>regedt32-------注册表编辑器</p>
<p>regsvr32/?----调用、卸载DLL文件运行(详细请在cmd中输入regsvr32/?)</p>
<p>sapi.cpl-------语音</p>
<p>services.msc---本地服务设置</p>
<p>syncapp--------创建一个公文包</p>
<p>sysedit--------系统配置编辑器</p>
<p>sigverif-------文件签名验证程序</p>
<p>sndrec32-------录音机</p>
<p>sndvol32-------音量控制程序</p>
<p>shrpubw--------共享文件夹设置工具</p>
<p>secpol.msc-----本地安全策略</p>
<p>sysdm.cpl------系统</p>
<p>syskey---------系统加密(一旦加密就不能解开，保护windowsxp系统的双重密码)</p>
<p>services.msc---本地服务设置</p>
<p>sfc.exe--------系统文件检查器</p>
<p>sfc/scannow---windows文件保护</p>
<p>shutdown-------关机命令(详细请在cmd中输入shutdown/?)</p>
<p>taskmgr--------任务管理器</p>
<p>telephon.cpl---电话和调制解调器选项</p>
<p>telnet---------远程连接程序</p>
<p>timedate.cpl---日期和时间</p>
<p>tourstart------xp简介(安装完成后出现的漫游xp程序)</p>
<p>tsshutdn-------60秒倒计时关机命令</p>
<p>utilman--------辅助工具管理器</p>
<p>winver---------检查Windows版本</p>
<p>winmsd---------系统信息</p>
<p>wiaacmgr-------扫描仪和照相机向导</p>
<p>winchat--------XP自带局域网聊天</p>
<p>wmimgmt.msc----打开windows管理体系结构(WMI)</p>
<p>wordpad--------写字板</p>
<p>wuaucpl.cpl----自动更新</p>
<p>wupdmgr--------windows更新程序</p>
<p>write----------写字板</p>
<p>wscript--------windows脚本宿主设置</p>
<p>wscui.cpl------安全中心</p>
<p>C:/windows/fonts</p>
<p>QQ快捷键，玩QQ更方便</p>
<p>Alt+S 快速回复</p>
<p>Alt+C 关闭当前窗口</p>
<p>Alt+H 打开聊天记录</p>
<p>Alt+T 更改消息模式</p>
<p>Ait+J 打开聊天纪录</p>
<p>Ctrl+A 全选当前对话框里的内容</p>
<p>Ctrl+F QQ里直接显示字体设置工具条</p>
<p>Ctrl+J 输入框里回车(跟回车一个效果)</p>
<p>Ctrl+M 输入框里回车(跟回车一个效果)</p>
<p>Ctrl+L 对输入框里当前行的文字左对齐</p>
<p>Ctrl+R 对输入框里当前行的文字右对齐</p>
<p>Ctrl+E 对输入框里当前行的文字居中</p>
<p>Ctrl+V 在qq对话框里实行粘贴</p>
<p>Ctrl+Z 清空/恢复输入框里的文字</p>
<p>Ctrl+回车 快速回复 这个可能是聊QQ时最常用到的了</p>
<p>Ctrl+Alt+Z 快速提取消息</p>
<p>Ctrl+Alt+A 捕捉屏幕</p>
<p>IE浏览器快捷键</p>
<p>一般快捷键</p>
<p>F11打开/关闭全屏模式</p>
<p>TAB循环的选择地址栏，刷新键和当前标签页</p>
<p>CTRL+F在当前标签页查询字或短语</p>
<p>CTRL+N为当前标签页打开一个新窗口</p>
<p>CTRL+P打印当前标签页</p>
<p>CTRL+A选择当前页的所有内容</p>
<p>CTRL+Plus放大(由于前面是加号为避免误解所以用Plus代表“+”)</p>
<p>CTRL+-缩小</p>
<p>CTRL+0恢复原始大小<br>
导航快捷键</p>
<p>ALT+HOME返回主页</p>
<p>ALT+LEFT返回后一页</p>
<p>ALT+RIGHT返回前一页</p>
<p>F5刷新</p>
<p>CTRL+F5刷新页面同时刷新缓存</p>
<p>ESC停止下载页面</p>
<p>收藏夹中心快捷键</p>
<p>CTRL+I打开收藏夹</p>
<p>CTRL+SHIFT+I以固定模式打开收藏夹</p>
<p>CTRL+B整理收藏夹</p>
<p>CTRL+D将当前页添加到收藏夹</p>
<p>CTRL+J打开 Feeds</p>
<p>CTRL+SHIFT+J以固定模式打开 Feeds</p>
<p>CTRL+H打开历史</p>
<p>CTRL+SHIFT+H以固定模式打开历史</p>
<p>标签快捷键</p>
<p>CTRL+ 鼠标左键 or 鼠标中键用新标签打开链接并切换至新标签</p>
<p>CTRL+SHIFT+ 鼠标左键 or CTRL+SHIFT+ 鼠标中键用新标签打开链接但不切换至新标签</p>
<p>CTRL+W or CTRL+F4关闭当前标签页(如果只有一个标签将关闭IE)</p>
<p>CTRL+Q打开快速标签视图</p>
<p>CTRL+T打开一个新标签</p>
<p>CTRL+SHIFT+Q查看打开标签的列表</p>
<p>CTRL+TAB切换到下一个标签</p>
<p>CTRL+SHIFT+TAB切换到前一个标签</p>
<p>地址栏快捷键</p>
<p>ALT+D选择地址栏</p>
<p>CTRL+ENTER在地址栏中的文本初出添加&quot;http://www.&quot; 和末尾添加&quot;.com&quot;</p>
<p>CTRL+SHIFT+ENTER在地址栏中的文本初出添加&quot;http://www.&quot; 和末尾添加你自定义的后缀</p>
<p>ALT+ENTER用新标签打开地址栏的网址</p>
<p>F4查看以前出入的地址</p>
<p>搜索栏快捷键</p>
<p>CTRL+E选择搜索栏</p>
<p>CTRL+DOWN查看搜索引擎列表</p>
<p>ALT+ENTER用新标签打开搜索结果</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[重要的程序！！！]]></title>
        <id>https://tegbrian.github.io/post/chong-yao-de-cheng-xu/</id>
        <link href="https://tegbrian.github.io/post/chong-yao-de-cheng-xu/">
        </link>
        <updated>2020-03-06T01:21:48.000Z</updated>
        <content type="html"><![CDATA[<h1 id="是不是哪里不会了呢没关系啊来这里找找自己想要的代码吧">😄😄是不是哪里不会了呢？没关系啊，来这里找找🔎🔍自己想要的代码吧！👇👇😉😉</h1>
<h2 id="一-查找">一、查找</h2>
<h4 id="1-二分查找时间复杂度为onlogn">1、二分查找（时间复杂度为O(nlogn))</h4>
<h4 id="详解点这里"><a href="https://tegbrian.github.io/post/er-fen-cha-zhao/">详解点这里！</a></h4>
<pre><code class="language-cpp">#include&lt;iostream&gt;
#include&lt;cstring&gt;
#include&lt;cmath&gt;
#include&lt;algorithm&gt;
#include&lt;cstdio&gt;
int x,a[10]={1,5,3,6,9,4,7,2,8},s,n;
using namespace std;
int erfen(int a[],int q,int x)
{
	int left=0;
	int right=8;
	int mid=(left+right)/2;
	int k=-1;
	while(left&lt;=right)
	{
		if(a[mid]==x) return mid;
		else if(a[mid]&gt;x) right=mid-1;
		else if(a[mid]&lt;x) left=mid+1;
		mid=(left+right)/2;
	}
	return k;
};
int main()
{
	cin&gt;&gt;n;
	sort(a,a+9);
	int index2 = erfen(a,10,n);
	cout&lt;&lt;index2&lt;&lt; endl;
 	return 0;
}

</code></pre>
<h2 id="二-排序">二、排序</h2>
<h3 id="1-lowb三人组时间复杂度为on2">1、lowB三人组（时间复杂度为O(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>))</h3>
<h4 id="1插入排序时间复杂度为on2">（1）插入排序（时间复杂度为O(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>)</h4>
<h4 id="详解点这里-2"><a href="https://tegbrian.github.io/post/cha-ru-pai-xu/">详解点这里！</a></h4>
<pre><code class="language-cpp">#include&lt;iostream&gt;
#include&lt;cstring&gt;
#include&lt;cmath&gt;
#include&lt;algorithm&gt;
#include&lt;cstdio&gt;
long long n,a[110];
using namespace std;
void insert_sort(long long a[],long long n)
{
	for(int i=1;i&lt;=n;i++)
	{
		long long tmp=a[i];//tmp用来记a[i]的值 
		long long j=i-1;//j指向a[i]所要对比的值 
		while(a[j]&gt;tmp&amp;&amp;a[j]&gt;=1)//1.首先如果a[i]是小于他所要对比的值，a[j]要往右移动 
		{						//2.且如果a[i]比他前面的值都要小，来到了0（此时已越界），就得退出 
			a[j+1]=a[j];
			j--;//a[j]往前移，j递减 
		}
		a[j+1]=tmp;//把a[i]归位 
	}
}
int main()
{
	cin&gt;&gt;n;
	for(int i=1;i&lt;=n;i++) cin&gt;&gt;a[i];
	insert_sort(a,n);
	for(int i=1;i&lt;=n;i++) cout&lt;&lt;a[i]&lt;&lt;&quot; &quot;;


 	return 0;
}

</code></pre>
<h4 id="2冒泡排序时间复杂度为on2">（2）冒泡排序（时间复杂度为O(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>))</h4>
<h4 id="详解点这里-3"><a href="https://tegbrian.github.io/post/mou-pao-pai-xu/">详解点这里！</a></h4>
<pre><code class="language-cpp">//优化版 
//时间复杂度=O(n2) 
#include&lt;iostream&gt;
#include&lt;cstring&gt;
#include&lt;cmath&gt;
#include&lt;algorithm&gt;
#include&lt;cstdio&gt; 
long long n,a[110]; 
using namespace std;
void bubble_sort(long long a[],long long n)
{
	bool ok=false;//拿ok来判是否交换 
	for(int i=1;i&lt;=n-1;i++) //由于将n-1个数已经排好，剩下的一个已经不用排了 
	{
		ok=false;
		for(int j=1;j&lt;=n-1;j++) //从第一个数开始比较 (这里要n-1因为最后一个会和0比，他一定大于0，会被排出去） 
			if(a[j]&gt;a[j+1])
			{
				swap(a[j],a[j+1]);//把小的放在前头 
				ok=true;//有交换判true
			}	
		if(!ok)//如果数组并没有交换
		{
			return;
		} 
	}	
	
}
int main()
{
	cin&gt;&gt;n;
	for(int i=1;i&lt;=n;i++) cin&gt;&gt;a[i];
	bubble_sort(a,n);
	for(int i=1;i&lt;=n;i++) cout&lt;&lt;a[i]&lt;&lt;&quot; &quot;;
 	return 0;
}

</code></pre>
<h4 id="3选择排序时间复杂度为on2">（3）选择排序（时间复杂度为O(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>))</h4>
<h4 id="详解点这里-4"><a href="https://tegbrian.github.io/post/xuan-ze-pai-xu/">详解点这里！</a></h4>
<pre><code class="language-cpp">#include&lt;iostream&gt;
#include&lt;cstring&gt;
#include&lt;cmath&gt;
#include&lt;algorithm&gt;
#include&lt;cstdio&gt;
long long n,a[110];
using namespace std;
void select_sort(long long a[],long long n)
{
	long long mi=100000,s=1,k=0;//用s来记递增的下标，k来记最小值的下标 
	for(int i=1;i&lt;=n-1;i++)//由于将n-1个数已经排好，剩下的一个已经不用排了
	{
		mi=100000;
		for(int j=s;j&lt;=n;j++) 
		{
			if(mi&gt;a[j]) 
			{
			mi=a[j]; 	
			k=j;
			}
		}
		swap(a[s],a[k]);//互换 
		s++;//s递增 
	}
}
int main()
{
	cin&gt;&gt;n;
	for(int i=1;i&lt;=n;i++)
	cin&gt;&gt;a[i];
	select_sort(a,n);
	for(int i=1;i&lt;=n;i++) cout&lt;&lt;a[i]&lt;&lt;&quot; &quot;;

 	return 0;
}

</code></pre>
<h3 id="2-nb三人组时间复杂度为onlogn">2、NB三人组（时间复杂度为O(nlogn))</h3>
<h4 id="1堆排序">（1）堆排序</h4>
<h4 id="详解点这里-5"><a href="https://tegbrian.github.io/post/dui-pai-xu/">详解点这里！</a></h4>
<pre><code class="language-cpp"> #include&lt;iostream&gt;
#include&lt;cstring&gt;
#include&lt;cmath&gt;
#include&lt;algorithm&gt;
#include&lt;cstdio&gt;
int a[110],n;
using namespace std;
void kkk(int a[],int low,int high)
{
	//low:堆的根结点位置
	//high:堆的最后一个元素的位置 
	int x=low;//x开始指向根节点 
	int y=2*x+1;//y开始是左孩子 
	int tmp=a[low];//把堆顶存起来 
	while(y&lt;=high)//只要y位置有值
	{
		if(a[y+1]&gt;a[y]&amp;&amp;y+1&lt;=high)//如果右孩子比左边大且有值 
		{
			y=y+1;//y指向右孩子 
		}
		if(a[y]&gt;tmp) 
		{
			a[x]=a[y];	  
			x=y;//往下看一层 
			y=2*x+1;
		}
		else//tmp更大，把tmp放到x的位置 
		{
			a[x]=tmp; 
			break;
		}
	} 
	a[x]=tmp; //把tmp放到叶子节点上 
}
void dui_pai_xu(int a[],int n)
{
	for(int i=(n-1)/2;i&gt;=0;i--)//i表示建堆的时候调整的部分的下标 
	{
		kkk(a,i,n);
	}
	for(int i=n-1;i&gt;0;i--)//i指向当前堆最后一个元素 
	{
		swap(a[0],a[i]);
		kkk(a,0,i-1);
	}
} 
int main()
{
	cin&gt;&gt;n;
	for(int i=0;i&lt;n;i++) cin&gt;&gt;a[i];
	dui_pai_xu(a,n);
	for(int i=0;i&lt;n;i++) cout&lt;&lt;a[i]&lt;&lt;&quot; &quot;;
 	return 0;
}
</code></pre>
<h1 id="持续更新哦以后附讲解">持续更新哦！！！以后附讲解！！！😤😤</h1>
]]></content>
    </entry>
</feed>